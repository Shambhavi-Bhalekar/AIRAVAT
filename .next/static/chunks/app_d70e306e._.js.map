{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/bhale/OneDrive/Desktop/git%20file/AIRAVAT/AIRAVAT-master/AIRAVAT-master/Nexural-Nexus_trial%202/app/components/sidebar_patient.tsx"],"sourcesContent":["'use client';\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { usePathname, useRouter } from 'next/navigation'; // Import useRouter\nimport { Calendar, User, Home, Search, PhoneCall, Apple, Menu, X, BotIcon, AlertCircle } from 'lucide-react';\n\nexport default function PatientSidebar() {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const pathname = usePathname(); // Get the current path\n  const router = useRouter(); // Initialize router for navigation\n\n  const toggleSidebar = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  const handleLogout = () => {\n    // Perform logout actions (e.g., clear session or tokens)\n    console.log('Logged out'); // Optional: Add any logout logic here\n    router.push('/login'); // Redirect to login page\n  };\n\n  const menuItems = [\n    { id: 'dashboard', icon: Home, label: 'Dashboard', href: '/patient/dashboard' },\n    { id: 'profile', icon: User, label: 'My Profile', href: '/patient/patient-profile' },\n    { id: 'calendar', icon: Calendar, label: 'Calendar', href: '/patient/patient-calendar' },\n    { id: 'connect', icon: PhoneCall, label: 'Connect with Doctor', href: '/patient/connect-doctor' },\n    { id: 'diet', icon: Apple, label: 'Plan My Diet', href: '/patient/diet-suggestion' },\n    { id: 'prescriptions', icon: Search, label: 'Check my Prescriptions', href: '/patient/prescription' },\n    { id: 'ChatBot', icon: BotIcon, label: 'Stress Reliever Bot', href: '/patient/chatbot' },\n  ];\n\n  return (\n    <div \n      className={`${\n        isCollapsed ? 'w-16' : 'w-64'\n      } h-screen bg-gradient-to-b from-blue-600 via-indigo-600 to-violet-600 text-white transition-all duration-300 ease-in-out flex flex-col justify-between shadow-lg`}>\n      \n      {/* Header */}\n      <div className=\"p-4 flex items-center justify-between\">\n        {!isCollapsed && (\n          <div className=\"font-bold text-xl\">MediMitra</div>\n        )}\n        <button \n          onClick={toggleSidebar} \n          className={`p-2 rounded-lg hover:bg-blue-500 transition-colors ${isCollapsed ? 'mx-auto' : ''}`}\n        >\n          {isCollapsed ? <Menu size={20} /> : <X size={20} />}\n        </button>\n      </div>\n\n      {/* User Info */}\n      {!isCollapsed && (\n        <div className=\"px-4 py-2\">\n          <div className=\"bg-blue-500 bg-opacity-30 rounded-lg p-3 flex items-center\">\n            <div className=\"w-10 h-10 rounded-full bg-white flex items-center justify-center text-blue-600 font-bold\">\n              AA\n            </div>\n            <div className=\"ml-3\">\n              <div className=\"font-medium\">Aran Angadi</div>\n              <div className=\"text-xs text-blue-100\">Patient ID: P78934</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Nav Items */}\n      <div className=\"flex-1 px-3 py-4\">\n        <ul className=\"space-y-2\">\n          {menuItems.map((item) => (\n            <li key={item.id}>\n              <Link href={item.href}>\n                <div\n                  className={`flex items-center p-3 rounded-lg w-full transition-all duration-200 cursor-pointer ${\n                    pathname.includes(item.href)\n                      ? 'bg-white text-indigo-600 font-medium shadow-md'\n                      : 'text-white hover:bg-indigo-500'\n                  } ${item.id === 'emergency' ? 'mt-4' : ''}`}\n                >\n                  <item.icon size={20} className={isCollapsed ? 'mx-auto' : 'mr-3'} />\n                  {!isCollapsed && <span>{item.label}</span>}\n                </div>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Logout */}\n      <div className=\"p-4 border-t border-indigo-700\">\n        <button \n          onClick={handleLogout} // Attach the logout handler\n          className={`flex items-center gap-3 p-3 rounded-lg transition-colors duration-300 ease-in-out ${\n            isCollapsed ? 'justify-center mx-auto' : 'hover:bg-indigo-500'\n          }`}\n        >\n          <AlertCircle size={20} />\n          {!isCollapsed && <span>Logout</span>}\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/bhale/OneDrive/Desktop/git%20file/AIRAVAT/AIRAVAT-master/AIRAVAT-master/Nexural-Nexus_trial%202/app/patient/dashboard/page.tsx"],"sourcesContent":["\"use client\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Calendar, Clock, Check, X, AlertCircle, Coffee, Sun, Sunset, Moon, Activity, Heart, User, Award, Apple } from 'lucide-react';\nimport PatientSidebar from '../../components/sidebar_patient';\n\ninterface Appointment {\n  id: number;\n  doctor: string;\n  specialty: string;\n  date: string;\n  time: string;\n}\n\ninterface Medication {\n  id: number;\n  name: string;\n  dosage: string;\n  time: string;\n  taken: boolean;\n}\n\ninterface MedicationsByTime {\n  morning: Medication[];\n  afternoon: Medication[];\n  evening: Medication[];\n  night: Medication[];\n}\n\ninterface MedicationSectionProps {\n  title: string;\n  icon: React.ElementType;\n  timeOfDay: keyof MedicationsByTime;\n  medications: Medication[];\n}\n\nexport default function PatientDashboard() {\n  const [currentTime, setCurrentTime] = useState<Date>(new Date());\n  const [sidebarOpen, setSidebarOpen] = useState<boolean>(true);\n  const patientName = \"Aran Angadi\"; // Placeholder for patient name\n  \n  // Schedule appointment form state\n  const [showAppointmentForm, setShowAppointmentForm] = useState<boolean>(false);\n  const [newAppointment, setNewAppointment] = useState({\n    doctor: \"\",\n    specialty: \"\",\n    date: \"\",\n    time: \"\"\n  });\n  \n  // Effect to update current time every minute\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    \n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  \n  // Appointments data\n  const [appointments, setAppointments] = useState<Appointment[]>([\n    { id: 1, doctor: \"Dr. Sarah Williams\", specialty: \"Cardiologist\", date: \"Apr 15, 2025\", time: \"10:30 AM\" },\n    { id: 2, doctor: \"Dr. Akshay Gupta\", specialty: \"Physiotherapist\", date: \"Apr 20, 2025\", time: \"2:15 PM\" },\n    { id: 3, doctor: \"Dr. Aaryan Waghmare\", specialty: \"Dermatologist\", date: \"May 5, 2025\", time: \"11:00 AM\" }\n  ]);\n  \n  // Available doctors for appointment scheduling\n  const availableDoctors = [\n    { name: \"Dr. Sarah Williams\", specialty: \"Cardiologist\" },\n    { name: \"Dr. Michael Chen\", specialty: \"Physiotherapist\" },\n    { name: \"Dr. Emily Rodriguez\", specialty: \"Dermatologist\" },\n    { name: \"Dr. James Wilson\", specialty: \"Neurologist\" },\n    { name: \"Dr. Lisa Patel\", specialty: \"Endocrinologist\" }\n  ];\n  \n  // Available time slots\n  const availableTimeSlots = [\n    \"9:00 AM\", \"9:30 AM\", \"10:00 AM\", \"10:30 AM\", \"11:00 AM\", \"11:30 AM\",\n    \"1:00 PM\", \"1:30 PM\", \"2:00 PM\", \"2:30 PM\", \"3:00 PM\", \"3:30 PM\", \"4:00 PM\"\n  ];\n  \n  // Medication data with times\n  const medications: MedicationsByTime = {\n    morning: [\n      { id: 1, name: \"Lisinopril\", dosage: \"10mg\", time: \"8:00 AM\", taken: false },\n      { id: 2, name: \"Metformin\", dosage: \"500mg\", time: \"8:00 AM\", taken: false }\n    ],\n    afternoon: [\n      { id: 3, name: \"Atorvastatin\", dosage: \"20mg\", time: \"1:00 PM\", taken: false }\n    ],\n    evening: [\n      { id: 4, name: \"Metformin\", dosage: \"500mg\", time: \"6:00 PM\", taken: false }\n    ],\n    night: [\n      { id: 5, name: \"Atorvastatin\", dosage: \"20mg\", time: \"9:00 PM\", taken: false },\n      { id: 6, name: \"Aspirin\", dosage: \"81mg\", time: \"9:00 PM\", taken: false }\n    ]\n  };\n  \n  const [meds, setMeds] = useState<MedicationsByTime>(medications);\n  \n  // Diet recommendations\n  const dietRecommendations: string[] = [\n    \"Maintain a low-sodium diet (under 2,300mg daily)\",\n    \"Include at least 5 servings of fruits and vegetables\",\n    \"Limit processed sugars and refined carbohydrates\",\n    \"Stay hydrated with 8-10 glasses of water\",\n    \"Consider Mediterranean diet principles for heart health\"\n  ];\n  \n  // Health recommendations\n  const healthRecommendations: string[] = [\n    \"Take a 30-minute walk daily\",\n    \"Monitor blood pressure each morning\",\n    \"Practice stress reduction techniques\",\n    \"Get 7-8 hours of quality sleep\",\n    \"Avoid alcohol and tobacco products\"\n  ];\n  \n  // Helper function to check if medication time has passed\n  const hasTimePassed = (timeString: string): boolean => {\n    const [time, period] = timeString.split(' ');\n    const [hours, minutes] = time.split(':').map(Number);\n    \n    let medicationHours = hours;\n    if (period === 'PM' && hours !== 12) {\n      medicationHours += 12;\n    } else if (period === 'AM' && hours === 12) {\n      medicationHours = 0;\n    }\n    \n    const now = new Date();\n    return (now.getHours() > medicationHours || \n           (now.getHours() === medicationHours && now.getMinutes() >= minutes));\n  };\n  \n  // Toggle medication taken status\n  const toggleMedication = (timeOfDay: keyof MedicationsByTime, medId: number): void => {\n    const updatedMeds = {...meds};\n    const medication = updatedMeds[timeOfDay].find(med => med.id === medId);\n    if (medication) {\n      medication.taken = !medication.taken;\n      setMeds(updatedMeds);\n    }\n  };\n  \n  // Calculate medication completion rate\n  const calculateCompletionRate = (): number => {\n    let total = 0;\n    let taken = 0;\n    \n    Object.values(meds).forEach(timeSlot => {\n      timeSlot.forEach(med => {\n        total++;\n        if (med.taken) taken++;\n      });\n    });\n    \n    return total > 0 ? Math.round((taken / total) * 100) : 0;\n  };\n  \n  // Handle input change for appointment form\n  const handleAppointmentInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value } = e.target;\n    setNewAppointment({\n      ...newAppointment,\n      [name]: value\n    });\n  };\n  \n  // Handle doctor selection for appointment form\n  const handleDoctorSelection = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const selectedDoctor = availableDoctors.find(doc => doc.name === e.target.value);\n    setNewAppointment({\n      ...newAppointment,\n      doctor: selectedDoctor ? selectedDoctor.name : \"\",\n      specialty: selectedDoctor ? selectedDoctor.specialty : \"\"\n    });\n  };\n  \n  // Submit new appointment\n  const handleAppointmentSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    // Form validation\n    if (!newAppointment.doctor || !newAppointment.date || !newAppointment.time) {\n      alert(\"Please fill all required fields\");\n      return;\n    }\n    \n    const appointment: Appointment = {\n      id: appointments.length > 0 ? Math.max(...appointments.map(a => a.id)) + 1 : 1,\n      doctor: newAppointment.doctor,\n      specialty: newAppointment.specialty,\n      date: newAppointment.date,\n      time: newAppointment.time\n    };\n    \n    // Update appointments list with new appointment\n    setAppointments([...appointments, appointment]);\n    \n    // Reset form and hide it\n    setNewAppointment({\n      doctor: \"\",\n      specialty: \"\",\n      date: \"\",\n      time: \"\"\n    });\n    setShowAppointmentForm(false);\n  };\n  \n  // Cancel appointment creation\n  const cancelAppointmentForm = () => {\n    setNewAppointment({\n      doctor: \"\",\n      specialty: \"\",\n      date: \"\",\n      time: \"\"\n    });\n    setShowAppointmentForm(false);\n  };\n  \n  // Medication section component\n  const MedicationSection: React.FC<MedicationSectionProps> = ({ title, icon: Icon, timeOfDay, medications }) => (\n    <div className=\"mb-6\">\n      <div className=\"flex items-center mb-3\">\n        <div className=\"w-8 h-8 rounded-full bg-indigo-100 flex items-center justify-center mr-2\">\n          <Icon size={18} className=\"text-indigo-600\" />\n        </div>\n        <h3 className=\"font-medium text-gray-800\">{title}</h3>\n      </div>\n      <ul className=\"space-y-3\">\n        {medications.map(med => {\n          const isPast = hasTimePassed(med.time);\n          const isOverdue = isPast && !med.taken;\n          \n          return (\n            <li \n              key={med.id} \n              className={`flex items-center justify-between rounded-xl border transition-all duration-300 ${\n                med.taken \n                  ? 'border-green-200 bg-green-50 shadow-sm' \n                  : isOverdue \n                    ? 'border-red-200 bg-red-50 shadow-sm' \n                    : 'border-gray-200 bg-white hover:border-indigo-200 hover:shadow-md'\n              }`}\n            >\n              <div className=\"flex items-center\">\n                <button \n                  onClick={() => toggleMedication(timeOfDay, med.id)}\n                  className={`w-5 h-5 rounded-full flex items-center justify-center ml-2 mr-4 transition-all duration-300 ${\n                    med.taken \n                      ? 'bg-green-500 text-white shadow-sm' \n                      : 'border-2 border-gray-300 hover:border-indigo-400'\n                  }`}\n                >\n                  {med.taken && <Check size={16} />}\n                </button>\n                <div>\n                  <div className=\"font-medium text-gray-800\">{med.name} <span className=\"text-indigo-600\">{med.dosage}</span></div>\n                  <div className=\"text-sm text-gray-500 flex items-center\">\n                    <Clock size={14} className=\"mr-1\" /> {med.time}\n                  </div>\n                </div>\n              </div>\n              {isOverdue && (\n                <span className=\"text-sm text-red-500 flex items-center bg-red-100 px-3 py-1 rounded-full\">\n                  <AlertCircle size={14} className=\"mr-1\" /> Missed\n                </span>\n              )}\n              {med.taken && (\n                <span className=\"text-sm text-green-500 flex items-center bg-green-100 px-3 py-1 rounded-full\">\n                  <Check size={14} className=\"mr-1\" /> Taken\n                </span>\n              )}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n\n  return (\n    <div className=\"flex min-h-screen bg-gradient-to-b from-blue-50 to-white\">\n      {/* Sidebar - Using the existing PatientSidebar component */}\n      <div className=\"sticky top-0 h-screen\">\n        <PatientSidebar />\n      </div>\n\n      {/* Main Content - Adjusts automatically with the sidebar */}\n      <div className=\"flex-1 p-6 transition-all duration-300\">\n        <div className=\"max-w-6xl mx-auto\">\n          {/* Header */}\n          <div className=\"mb-8 bg-gradient-to-r from-indigo-600 to-violet-600 rounded-2xl shadow-lg p-6 text-white\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-3xl font-bold\">Hi, {patientName}</h1>\n                <p className=\"mt-1 text-indigo-100\">\n                  {currentTime.toLocaleDateString('en-US', { \n                    weekday: 'long', \n                    month: 'long', \n                    day: 'numeric' \n                  })}\n                </p>\n                <div className=\"mt-4 bg-white bg-opacity-20 rounded-lg px-4 py-2 inline-block\">\n                  <div className=\"flex items-center\">\n                    <Activity className=\"mr-2 text-gray-700\" />\n                    <span className=\"text-gray-700 mr-15\">Daily progress: {calculateCompletionRate()}% complete</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"hidden md:block\">\n                <div className=\"w-16 h-16 bg-white rounded-full flex items-center justify-center text-indigo-600 font-bold text-xl shadow-md\">\n                  AJ\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n            {/* Left Column */}\n            <div className=\"lg:col-span-2\">\n              {/* Medication Tracker */}\n              <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-8 border border-indigo-100\">\n                <div className=\"flex justify-between items-center mb-6\">\n                  <h2 className=\"text-xl font-bold text-gray-800\">Today's Medication</h2>\n                  <div className=\"text-sm bg-indigo-100 text-indigo-600 px-3 py-1 rounded-full font-medium\">\n                    {calculateCompletionRate()}% Complete\n                  </div>\n                </div>\n                \n                <MedicationSection \n                  title=\"Morning\" \n                  icon={Coffee} \n                  timeOfDay=\"morning\" \n                  medications={meds.morning} \n                />\n                \n                <MedicationSection \n                  title=\"Afternoon\" \n                  icon={Sun} \n                  timeOfDay=\"afternoon\" \n                  medications={meds.afternoon} \n                />\n                \n                <MedicationSection \n                  title=\"Evening\" \n                  icon={Sunset} \n                  timeOfDay=\"evening\" \n                  medications={meds.evening} \n                />\n                \n                <MedicationSection \n                  title=\"Night\" \n                  icon={Moon} \n                  timeOfDay=\"night\" \n                  medications={meds.night} \n                />\n              </div>\n\n              {/* Diet & Health Recommendations */}\n              <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-indigo-100\">\n                <h2 className=\"text-xl font-bold text-gray-800 mb-6\">Personalized Recommendations</h2>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n                  <div className=\"bg-blue-50 rounded-xl p-5 border border-blue-100\">\n                    <div className=\"flex items-center mb-4\">\n                      <div className=\"w-10 h-10 rounded-full bg-blue-100 flex items-center justify-center mr-3\">\n                        <Apple size={20} className=\"text-blue-600\" />\n                      </div>\n                      <h3 className=\"font-medium text-lg text-gray-800\">Diet Plan</h3>\n                    </div>\n                    <ul className=\"space-y-3\">\n                      {dietRecommendations.map((item, index) => (\n                        <li key={index} className=\"flex items-start\">\n                          <div className=\"mt-1 mr-3 w-5 h-5 bg-blue-200 rounded-full flex items-center justify-center text-blue-700\">\n                            <Check size={12} />\n                          </div>\n                          <span className=\"text-gray-700\">{item}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                  \n                  <div className=\"bg-violet-50 rounded-xl p-5 border border-violet-100\">\n                    <div className=\"flex items-center mb-4\">\n                      <div className=\"w-10 h-10 rounded-full bg-violet-100 flex items-center justify-center mr-3\">\n                        <Heart size={20} className=\"text-violet-600\" />\n                      </div>\n                      <h3 className=\"font-medium text-lg text-gray-800\">Health Measures</h3>\n                    </div>\n                    <ul className=\"space-y-3\">\n                      {healthRecommendations.map((item, index) => (\n                        <li key={index} className=\"flex items-start\">\n                          <div className=\"mt-1 mr-3 w-5 h-5 bg-violet-200 rounded-full flex items-center justify-center text-violet-700\">\n                            <Check size={12} />\n                          </div>\n                          <span className=\"text-gray-700\">{item}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Right Column */}\n            <div>\n              {/* Progress Summary */}\n              <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-8 border border-indigo-100\">\n                <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Your Progress</h2>\n                <div className=\"mb-6\">\n                  <div className=\"flex justify-between mb-2\">\n                    <span className=\"text-gray-600\">Medication adherence</span>\n                    <span className=\"font-medium\">{calculateCompletionRate()}%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                    <div \n                      className=\"bg-gradient-to-r from-indigo-500 to-violet-500 h-2.5 rounded-full\" \n                      style={{ width: `${calculateCompletionRate()}%` }}\n                    ></div>\n                  </div>\n                </div>\n                <div className=\"mb-6\">\n                  <div className=\"flex justify-between mb-2\">\n                    <span className=\"text-gray-600\">Diet plan compliance</span>\n                    <span className=\"font-medium\">80%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                    <div \n                      className=\"bg-gradient-to-r from-blue-500 to-blue-600 h-2.5 rounded-full\" \n                      style={{ width: '80%' }}\n                    ></div>\n                  </div>\n                </div>\n                <div className=\"mb-6\">\n                  <div className=\"flex justify-between mb-2\">\n                    <span className=\"text-gray-600\">Exercise goals</span>\n                    <span className=\"font-medium\">65%</span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\n                    <div \n                      className=\"bg-gradient-to-r from-violet-500 to-purple-600 h-2.5 rounded-full\" \n                      style={{ width: '65%' }}\n                    ></div>\n                  </div>\n                </div>\n                <div className=\"text-center mt-4\">\n                  <div className=\"inline-flex items-center text-indigo-600\">\n                    <Award size={16} className=\"mr-1\" />\n                    <span className=\"font-medium\">3-day streak!</span>\n                  </div>\n                </div>\n              </div>\n              \n              {/* Upcoming Appointments */}\n              <div className=\"bg-white rounded-2xl shadow-lg p-6 mb-8 border border-indigo-100\">\n                <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Upcoming Appointments</h2>\n                \n                {appointments.length > 0 ? (\n                  <div className=\"space-y-4\">\n                    {appointments.map(appointment => (\n                      <div \n                        key={appointment.id} \n                        className=\"border border-gray-200 rounded-xl p-4 hover:border-indigo-300 hover:shadow-md transition-all duration-300\"\n                      >\n                        <div className=\"flex justify-between items-start\">\n                          <div>\n                            <h3 className=\"font-medium text-gray-800\">{appointment.doctor}</h3>\n                            <p className=\"text-sm text-gray-500\">{appointment.specialty}</p>\n                          </div>\n                          <div className=\"bg-indigo-100 text-indigo-700 text-xs font-medium px-3 py-1 rounded-full\">\n                            Upcoming\n                          </div>\n                        </div>\n                        <div className=\"mt-3 flex items-center text-gray-600\">\n                          <div className=\"flex items-center mr-4\">\n                            <Calendar size={14} className=\"mr-1\" />\n                            <span className=\"text-sm\">{appointment.date}</span>\n                          </div>\n                          <div className=\"flex items-center\">\n                            <Clock size={14} className=\"mr-1\" />\n                            <span className=\"text-sm\">{appointment.time}</span>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500\">No upcoming appointments.</p>\n                )}\n                \n                <button \n                  onClick={() => setShowAppointmentForm(true)}\n                  className=\"mt-4 w-full bg-gradient-to-r from-indigo-600 to-violet-600 hover:from-indigo-700 hover:to-violet-700 text-white py-3 px-4 rounded-xl transition-colors font-medium flex items-center justify-center\"\n                >\n                  <Calendar size={18} className=\"mr-2\" />\n                  Schedule New Appointment\n                </button>\n              </div>\n              \n              {/* Health Stats Summary */}\n              <div className=\"bg-gradient-to-br from-indigo-600 to-violet-600 rounded-2xl shadow-lg p-6 text-white\">\n                <h2 className=\"text-xl font-bold mb-4\">Health Summary</h2>\n              \n                <div className=\"space-y-4 \">\n                  <div className=\"bg-white bg-opacity-10 rounded-xl p-3 flex justify-between items-center \">\n                    <div className=\"flex items-center \">\n                      <div className=\"w-8 h-8 rounded-full bg-white bg-opacity-20 flex items-center justify-center mr-3\">\n                        <Activity size={16} className=\"text-gray-700\" />\n                      </div>\n                      <span className=\"text-gray-700\">Blood Pressure</span>\n                    </div>\n                    <span className=\"font-medium text-gray-700\">122/78 mmHg</span>\n                  </div>\n                  <div className=\"bg-white bg-opacity-10 rounded-xl p-3 flex justify-between items-center\">\n                    <div className=\"flex items-center\">\n                      <div className=\"w-8 h-8 rounded-full bg-white bg-opacity-20 flex items-center justify-center mr-3\">\n                        <Activity size={16} className=\"text-gray-700\" />\n                      </div>\n                      <span className=\"text-gray-700\">Blood Glucose</span>\n                    </div>\n                    <span className=\"font-medium text-gray-700\">105 mg/dL</span>\n                  </div>\n                  <div className=\"bg-white bg-opacity-10 rounded-xl p-3 flex justify-between items-center\">\n                    <div className=\"flex items-center\">\n                      <div className=\"w-8 h-8 rounded-full bg-white bg-opacity-20 flex items-center justify-center mr-3\">\n                        <Heart size={16} className=\"text-gray-700\" />\n                      </div>\n                      <span className=\"text-gray-700\">Heart Rate</span>\n                    </div>\n                    <span className=\"font-medium text-gray-700\">72 bpm</span>\n                  </div>\n                  <div className=\"bg-white bg-opacity-10 rounded-xl p-3 flex justify-between items-center\">\n                    <div className=\"flex items-center\">\n                      <div className=\"w-8 h-8 rounded-full bg-white bg-opacity-20 flex items-center justify-center mr-3\">\n                        <User size={16} className=\"text-gray-700\" />\n                      </div>\n                      <span className=\"text-gray-700\">Weight</span>\n                    </div>\n                    <span className=\"font-medium text-gray-700\">168 lbs</span>\n                  </div>\n                </div>\n                \n                <button className=\"mt-6 w-full bg-white text-indigo-700 hover:bg-indigo-50 py-3 px-4 rounded-xl transition-colors font-medium shadow-md flex items-center justify-center\">\n                  <Activity size={18} className=\"mr-2\" />\n                  View Full Health Report\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      {/* Appointment Scheduling Modal */}\n      {showAppointmentForm && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-opacity-100 backdrop-blur-sm\">\n          <div className=\"bg-white rounded-2xl shadow-xl p-6 w-full max-w-md\">\n            <div className=\"flex justify-between items-center mb-6\">\n              <h2 className=\"text-xl font-bold text-gray-800\">Schedule New Appointment</h2>\n              <button \n                onClick={cancelAppointmentForm}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                <X size={24} />\n              </button>\n            </div>\n            \n            <form onSubmit={handleAppointmentSubmit}>\n              <div className=\"mb-4 text-gray-700\">\n                <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n                  Doctor\n                </label>\n                <select\n                  name=\"doctor\"\n                  value={newAppointment.doctor}\n                  onChange={handleDoctorSelection}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  required\n                >\n                  <option value=\"\">Select a doctor</option>\n                  {availableDoctors.map((doc, index) => (\n                    <option key={index} value={doc.name} className=\"text-gray-700\">\n                      {doc.name} ({doc.specialty})\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"mb-4 text-gray-700\">\n                <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n                  Date\n                </label>\n                <input\n                  type=\"date\"\n                  name=\"date\"\n                  value={newAppointment.date}\n                  onChange={handleAppointmentInputChange}\n                  min={new Date().toISOString().split('T')[0]}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  required\n                />\n              </div>\n              \n              <div className=\"mb-6 text-gray-700\">\n                <label className=\"block text-gray-700 text-sm font-medium mb-2\">\n                  Time\n                </label>\n                <select\n                  name=\"time\"\n                  value={newAppointment.time}\n                  onChange={handleAppointmentInputChange}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                  required\n                >\n                  <option value=\"\">Select a time</option>\n                  {availableTimeSlots.map((time, index) => (\n                    <option key={index} value={time}>\n                      {time}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"flex space-x-3\">\n                <button\n                  type=\"button\"\n                  onClick={cancelAppointmentForm}\n                  className=\"flex-1 bg-gray-100 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-200 transition-colors font-medium\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"flex-1 bg-gradient-to-r from-indigo-600 to-violet-600 hover:from-indigo-700 hover:to-violet-700 text-white py-2 px-4 rounded-lg transition-colors font-medium\"\n                >\n                  Schedule\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}