{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/bhale/OneDrive/Desktop/git%20file/AIRAVAT/AIRAVAT-master/AIRAVAT-master/Nexural-Nexus_trial%202/app/components/sidebar_patient.tsx"],"sourcesContent":["'use client';\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { usePathname, useRouter } from 'next/navigation'; // Import useRouter\nimport { Calendar, User, Home, Search, PhoneCall, Apple, Menu, X, BotIcon, AlertCircle } from 'lucide-react';\n\nexport default function PatientSidebar() {\n  const [isCollapsed, setIsCollapsed] = useState(false);\n  const pathname = usePathname(); // Get the current path\n  const router = useRouter(); // Initialize router for navigation\n\n  const toggleSidebar = () => {\n    setIsCollapsed(!isCollapsed);\n  };\n\n  const handleLogout = () => {\n    // Perform logout actions (e.g., clear session or tokens)\n    console.log('Logged out'); // Optional: Add any logout logic here\n    router.push('/login'); // Redirect to login page\n  };\n\n  const menuItems = [\n    { id: 'dashboard', icon: Home, label: 'Dashboard', href: '/patient/dashboard' },\n    { id: 'profile', icon: User, label: 'My Profile', href: '/patient/patient-profile' },\n    { id: 'calendar', icon: Calendar, label: 'Calendar', href: '/patient/patient-calendar' },\n    { id: 'connect', icon: PhoneCall, label: 'Connect with Doctor', href: '/patient/connect-doctor' },\n    { id: 'diet', icon: Apple, label: 'Plan My Diet', href: '/patient/diet-suggestion' },\n    { id: 'prescriptions', icon: Search, label: 'Check my Prescriptions', href: '/patient/prescription' },\n    { id: 'ChatBot', icon: BotIcon, label: 'Stress Reliever Bot', href: '/patient/chatbot' },\n  ];\n\n  return (\n    <div \n      className={`${\n        isCollapsed ? 'w-16' : 'w-64'\n      } h-screen bg-gradient-to-b from-blue-600 via-indigo-600 to-violet-600 text-white transition-all duration-300 ease-in-out flex flex-col justify-between shadow-lg`}>\n      \n      {/* Header */}\n      <div className=\"p-4 flex items-center justify-between\">\n        {!isCollapsed && (\n          <div className=\"font-bold text-xl\">MediMitra</div>\n        )}\n        <button \n          onClick={toggleSidebar} \n          className={`p-2 rounded-lg hover:bg-blue-500 transition-colors ${isCollapsed ? 'mx-auto' : ''}`}\n        >\n          {isCollapsed ? <Menu size={20} /> : <X size={20} />}\n        </button>\n      </div>\n\n      {/* User Info */}\n      {!isCollapsed && (\n        <div className=\"px-4 py-2\">\n          <div className=\"bg-blue-500 bg-opacity-30 rounded-lg p-3 flex items-center\">\n            <div className=\"w-10 h-10 rounded-full bg-white flex items-center justify-center text-blue-600 font-bold\">\n              AA\n            </div>\n            <div className=\"ml-3\">\n              <div className=\"font-medium\">Aran Angadi</div>\n              <div className=\"text-xs text-blue-100\">Patient ID: P78934</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Nav Items */}\n      <div className=\"flex-1 px-3 py-4\">\n        <ul className=\"space-y-2\">\n          {menuItems.map((item) => (\n            <li key={item.id}>\n              <Link href={item.href}>\n                <div\n                  className={`flex items-center p-3 rounded-lg w-full transition-all duration-200 cursor-pointer ${\n                    pathname.includes(item.href)\n                      ? 'bg-white text-indigo-600 font-medium shadow-md'\n                      : 'text-white hover:bg-indigo-500'\n                  } ${item.id === 'emergency' ? 'mt-4' : ''}`}\n                >\n                  <item.icon size={20} className={isCollapsed ? 'mx-auto' : 'mr-3'} />\n                  {!isCollapsed && <span>{item.label}</span>}\n                </div>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Logout */}\n      <div className=\"p-4 border-t border-indigo-700\">\n        <button \n          onClick={handleLogout} // Attach the logout handler\n          className={`flex items-center gap-3 p-3 rounded-lg transition-colors duration-300 ease-in-out ${\n            isCollapsed ? 'justify-center mx-auto' : 'hover:bg-indigo-500'\n          }`}\n        >\n          <AlertCircle size={20} />\n          {!isCollapsed && <span>Logout</span>}\n        </button>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/bhale/OneDrive/Desktop/git%20file/AIRAVAT/AIRAVAT-master/AIRAVAT-master/Nexural-Nexus_trial%202/app/patient/connect-doctor/page.tsx"],"sourcesContent":["\"use client\";\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Search, MessageSquare, UserPlus, Check, X, Send, ArrowLeft } from 'lucide-react';\nimport PatientSidebar from '@/app/components/sidebar_patient';\n\nexport default function PatientDoctorConnections() {\n  // Sample data for doctors\n  const [allDoctors, setAllDoctors] = useState([\n    { id: 1, name: \"Dr. Sarah Johnson\", specialty: \"Cardiologist\", connected: true, avatar: \"/api/placeholder/50/50\", lastActive: \"5m ago\" },\n    { id: 2, name: \"Dr. Aaryan Waghmare\", specialty: \"Neurologist\", connected: true, avatar: \"/api/placeholder/50/50\", lastActive: \"2h ago\" },\n    { id: 3, name: \"Dr. Jovan Fernandes\", specialty: \"Pediatrician\", connected: true, avatar: \"/api/placeholder/50/50\", lastActive: \"1h ago\" },\n    { id: 4, name: \"Dr. Shambhavi\", specialty: \"Orthopedic Surgeon\", connected: false, avatar: \"/api/placeholder/50/50\", lastActive: \"3h ago\" },\n    { id: 5, name: \"Dr. James Wilson\", specialty: \"Dermatologist\", connected: false, avatar: \"/api/placeholder/50/50\", lastActive: \"30m ago\" },\n    { id: 6, name: \"Dr. Nehtra Nayak\", specialty: \"Psychiatrist\", connected: false, avatar: \"/api/placeholder/50/50\", lastActive: \"1d ago\" },\n    { id: 7, name: \"Dr. Robert Garcia\", specialty: \"Endocrinologist\", connected: false, avatar: \"/api/placeholder/50/50\", lastActive: \"4h ago\" },\n    { id: 8, name: \"Dr. Jennifer Lee\", specialty: \"Ophthalmologist\", connected: false, avatar: \"/api/placeholder/50/50\", lastActive: \"2d ago\" },\n    { id: 9, name: \"Dr. Daniel Martinez\", specialty: \"Gastroenterologist\", connected: false, avatar: \"/api/placeholder/50/50\", lastActive: \"1h ago\" },\n    { id: 10, name: \"Dr. Riya Suryawanshi\", specialty: \"Rheumatologist\", connected: false, avatar: \"/api/placeholder/50/50\", lastActive: \"45m ago\" },\n    { id: 11, name: \"Dr. Anushka Suvarna\", specialty: \"Pulmonologist\", connected: false, avatar: \"/api/placeholder/50/50\", lastActive: \"3h ago\" },\n    { id: 12, name: \"Dr. Rebecca Adams\", specialty: \"Oncologist\", connected: true, avatar: \"/api/placeholder/50/50\", lastActive: \"Just now\" },\n  ]);\n\n  // Search state\n  const [searchQuery, setSearchQuery] = useState('');\n \n  // Filtered doctors based on search query\n  const [filteredDoctors, setFilteredDoctors] = useState([...allDoctors]);\n \n  // Chat state\n  const [activeChat, setActiveChat] = useState(null);\n  const [chatMessages, setChatMessages] = useState({});\n  const [newMessage, setNewMessage] = useState('');\n \n  // Request states\n  const [pendingRequests, setPendingRequests] = useState([]);\n\n  // Update filtered doctors when search query changes\n  useEffect(() => {\n    if (searchQuery.trim() === '') {\n      setFilteredDoctors([...allDoctors]);\n    } else {\n      const query = searchQuery.toLowerCase();\n      const filtered = allDoctors.filter(\n        doctor =>\n          doctor.name.toLowerCase().includes(query) ||\n          doctor.specialty.toLowerCase().includes(query)\n      );\n      setFilteredDoctors(filtered);\n    }\n  }, [searchQuery, allDoctors]);\n\n  // Handle search input\n  const handleSearchChange = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  // Send connection request to a doctor\n  const sendConnectionRequest = (doctorId) => {\n    const doctor = allDoctors.find(doc => doc.id === doctorId);\n   \n    // Add to pending requests\n    if (!pendingRequests.some(req => req.id === doctorId)) {\n      setPendingRequests([...pendingRequests, doctor]);\n     \n      // Simulate automatic acceptance after 3 seconds (for demo purposes)\n      setTimeout(() => {\n        acceptRequest(doctorId);\n      }, 3000);\n    }\n  };\n\n  // Accept connection request (simulated doctor's action)\n  const acceptRequest = (doctorId) => {\n    // Update doctor's connected status\n    setAllDoctors(prevDoctors =>\n      prevDoctors.map(doctor =>\n        doctor.id === doctorId ? { ...doctor, connected: true } : doctor\n      )\n    );\n   \n    // Remove from pending requests\n    setPendingRequests(prevRequests =>\n      prevRequests.filter(req => req.id !== doctorId)\n    );\n   \n    // Initialize empty chat\n    setChatMessages(prevChats => ({\n      ...prevChats,\n      [doctorId]: [\n        {\n          sender: 'doctor',\n          text: 'Hello! How can I help you today?',\n          timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n        }\n      ]\n    }));\n  };\n\n  // Open chat with a doctor\n  const openChat = (doctorId) => {\n    setActiveChat(doctorId);\n   \n    // Initialize chat if it doesn't exist\n    if (!chatMessages[doctorId]) {\n      setChatMessages(prevChats => ({\n        ...prevChats,\n        [doctorId]: [\n          {\n            sender: 'doctor',\n            text: 'Hello! How can I help you today?',\n            timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n          }\n        ]\n      }));\n    }\n  };\n\n  // Close active chat\n  const closeChat = () => {\n    setActiveChat(null);\n  };\n\n  // Send message in chat\n  const sendMessage = () => {\n    if (newMessage.trim() === '' || !activeChat) return;\n   \n    // Add patient message\n    setChatMessages(prevChats => ({\n      ...prevChats,\n      [activeChat]: [\n        ...(prevChats[activeChat] || []),\n        {\n          sender: 'patient',\n          text: newMessage,\n          timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n        }\n      ]\n    }));\n   \n    setNewMessage('');\n   \n    // Simulate doctor's response after 1 second\n    setTimeout(() => {\n      const doctor = allDoctors.find(doc => doc.id === activeChat);\n      const responses = [\n        \"I understand. Let me check your records.\",\n        `As your ${doctor.specialty}, I recommend we follow up on this.`,\n        \"Have you been taking the prescribed medication regularly?\",\n        \"That's good to hear. Keep monitoring and let me know if anything changes.\",\n        \"I'll make a note of these symptoms in your file.\",\n        \"Would you be available for an appointment next week?\"\n      ];\n     \n      const randomResponse = responses[Math.floor(Math.random() * responses.length)];\n     \n      setChatMessages(prevChats => ({\n        ...prevChats,\n        [activeChat]: [\n          ...(prevChats[activeChat] || []),\n          {\n            sender: 'doctor',\n            text: randomResponse,\n            timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n          }\n        ]\n      }));\n    }, 1000);\n  };\n\n  // Get connected and available doctors\n  const connectedDoctors = filteredDoctors.filter(doctor => doctor.connected);\n  const availableDoctors = filteredDoctors.filter(doctor => !doctor.connected);\n\n  return (\n    <div className=\"flex min-h-screen bg-blue-50\">\n      {/* Fixed sidebar on the left */}\n      <div className=\"fixed left-0 top-0 h-full z-10\">\n        <PatientSidebar />\n      </div>\n      \n      {/* Main content with left margin to accommodate sidebar */}\n      <div className=\"flex-1 p-4 md:p-8 ml-16 md:ml-20\">\n        <div className=\"max-w-6xl mx-auto\">\n          \n          <header className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n            <h1 className=\"text-2xl md:text-3xl font-bold text-blue-800\">Your Medical Network</h1>\n            <p className=\"text-blue-600 mt-2\">Connect with specialists and manage your healthcare team</p>\n          </header>\n         \n          {/* Search and Pending Requests */}\n          <div className=\"bg-white rounded-lg shadow-lg p-6 mb-8\">\n            <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-4 mb-4\">\n              <div className=\"relative flex-1\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <Search size={20} className=\"text-gray-400\" />\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Search for doctors by name or specialty...\"\n                  value={searchQuery}\n                  onChange={handleSearchChange}\n                  className=\"pl-10 pr-4 py-2 w-full border border-blue-200 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-700\"\n                />\n              </div>\n             \n              {pendingRequests.length > 0 && (\n                <div className=\"bg-blue-100 rounded-lg px-4 py-2 text-sm text-blue-800 flex items-center\">\n                  <span className=\"font-medium mr-1\">{pendingRequests.length}</span>\n                  <span>pending connection{pendingRequests.length > 1 ? 's' : ''}</span>\n                </div>\n              )}\n            </div>\n           \n            {/* Pending Requests Section */}\n            {pendingRequests.length > 0 && (\n              <div className=\"mb-4\">\n                <h2 className=\"text-lg font-semibold text-blue-800 mb-3\">Pending Requests</h2>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {pendingRequests.map(doctor => (\n                    <div key={`pending-${doctor.id}`} className=\"bg-yellow-50 border border-yellow-100 rounded-lg p-4 flex items-center justify-between\">\n                      <div className=\"flex items-center\">\n                        <img src={doctor.avatar} alt={doctor.name} className=\"w-10 h-10 rounded-full mr-3\" />\n                        <div>\n                          <h3 className=\"font-medium\">{doctor.name}</h3>\n                          <p className=\"text-sm text-gray-600\">{doctor.specialty}</p>\n                        </div>\n                      </div>\n                      <span className=\"px-3 py-1 bg-yellow-200 text-yellow-800 rounded-full text-xs\">Pending</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n         \n          <div className=\"flex flex-col lg:flex-row gap-8\">\n            {/* Connected Doctors */}\n            <div className=\"lg:w-1/2 bg-white rounded-lg shadow-lg p-6\">\n              <h2 className=\"text-xl font-bold text-blue-800 mb-4 flex items-center\">\n                <Check size={20} className=\"text-green-500 mr-2\" />\n                Connected Doctors\n              </h2>\n             \n              {connectedDoctors.length === 0 ? (\n                <div className=\"text-center py-8 bg-gray-50 rounded-lg\">\n                  <p className=\"text-gray-500\">No connected doctors found.</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {connectedDoctors.map(doctor => (\n                    <div key={doctor.id} className=\"border border-blue-100 rounded-lg p-4 flex justify-between items-center hover:bg-blue-50 transition-colors\">\n                      <div className=\"flex items-center\">\n                        <img src={doctor.avatar} alt={doctor.name} className=\"w-12 h-12 rounded-full mr-4\" />\n                        <div>\n                          <h3 className=\"font-medium text-blue-900\">{doctor.name}</h3>\n                          <p className=\"text-sm text-blue-600\">{doctor.specialty}</p>\n                          <p className=\"text-xs text-gray-500\">Last active: {doctor.lastActive}</p>\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => openChat(doctor.id)}\n                        className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 flex items-center cursor-pointer\"\n                      >\n                        <MessageSquare size={16} className=\"mr-2\" />\n                        Message\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n           \n            {/* Available Doctors */}\n            <div className=\"lg:w-1/2 bg-white rounded-lg shadow-lg p-6\">\n              <h2 className=\"text-xl font-bold text-blue-800 mb-4\">\n                Available Specialists\n              </h2>\n             \n              {availableDoctors.length === 0 ? (\n                <div className=\"text-center py-8 bg-gray-50 rounded-lg\">\n                  <p className=\"text-gray-500\">No available doctors found.</p>\n                </div>\n              ) : (\n                <div className=\"space-y-4\">\n                  {availableDoctors.map(doctor => (\n                    <div key={doctor.id} className=\"border border-gray-200 rounded-lg p-4 flex justify-between items-center hover:bg-gray-50 transition-colors\">\n                      <div className=\"flex items-center\">\n                        <img src={doctor.avatar} alt={doctor.name} className=\"w-12 h-12 rounded-full mr-4\" />\n                        <div>\n                          <h3 className=\"font-medium\">{doctor.name}</h3>\n                          <p className=\"text-sm text-gray-600\">{doctor.specialty}</p>\n                          <p className=\"text-xs text-gray-500\">Last active: {doctor.lastActive}</p>\n                        </div>\n                      </div>\n                      <button\n                        onClick={() => sendConnectionRequest(doctor.id)}\n                        className={`px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 flex items-center cursor-pointer ${\n                          pendingRequests.some(req => req.id === doctor.id) ? 'opacity-50 cursor-not-allowed' : ''\n                        }`}\n                        disabled={pendingRequests.some(req => req.id === doctor.id)}\n                      >\n                        <UserPlus size={16} className=\"mr-2\" />\n                        {pendingRequests.some(req => req.id === doctor.id) ? 'Requested' : 'Connect'}\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Chat Modal */}\n      {activeChat && (\n        <div className=\"fixed inset-0  bg-opacity-50 backdrop-blur-sm flex items-center justify-center z-50 p-4\">\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-lg h-[32rem] flex flex-col\">\n            {/* Chat Header */}\n            <div className=\"p-4 border-b flex items-center justify-between bg-blue-600 text-white rounded-t-lg\">\n              <div className=\"flex items-center\">\n                <button onClick={closeChat} className=\"mr-2 cursor-pointer\">\n                  <ArrowLeft size={20} />\n                </button>\n                <div className=\"flex items-center\">\n                  <img\n                    src={allDoctors.find(d => d.id === activeChat)?.avatar}\n                    alt=\"Doctor\"\n                    className=\"w-10 h-10 rounded-full mr-3 border-2 border-white\"\n                  />\n                  <div>\n                    <h3 className=\"font-medium\">{allDoctors.find(d => d.id === activeChat)?.name}</h3>\n                    <p className=\"text-xs text-blue-100\">{allDoctors.find(d => d.id === activeChat)?.specialty}</p>\n                  </div>\n                </div>\n              </div>\n              <span className=\"text-xs bg-green-500 px-2 py-1 rounded-full\">Online</span>\n            </div>\n           \n            {/* Chat Messages */}\n            <div className=\"flex-1 overflow-y-auto p-4 bg-gray-50 space-y-4 text-gray-700\">\n              {chatMessages[activeChat]?.map((message, index) => (\n                <div\n                  key={index}\n                  className={`flex ${message.sender === 'patient' ? 'justify-end' : 'justify-start'}`}\n                >\n                  <div\n                    className={`max-w-[80%] rounded-lg px-4 py-2 ${\n                      message.sender === 'patient'\n                        ? 'bg-blue-600 text-white rounded-tr-none'\n                        : 'bg-white border border-gray-200 rounded-tl-none'\n                    }`}\n                  >\n                    <p>{message.text}</p>\n                    <p className={`text-xs mt-1 ${message.sender === 'patient' ? 'text-blue-100' : 'text-gray-500'}`}>\n                      {message.timestamp}\n                    </p>\n                  </div>\n                </div>\n              ))}\n            </div>\n           \n            {/* Chat Input */}\n            <div className=\"p-4 border-t bg-white rounded-b-lg\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"text\"\n                  value={newMessage}\n                  onChange={(e) => setNewMessage(e.target.value)}\n                  placeholder=\"Type your message...\"\n                  className=\"flex-1 p-2 border border-gray-300 text-gray-700 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\n                />\n                <button\n                  onClick={sendMessage}\n                  className=\"ml-2 p-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 cursor-pointer\"\n                >\n                  <Send size={20} />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,0BAA0B;IAC1B,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QAC3C;YAAE,IAAI;YAAG,MAAM;YAAqB,WAAW;YAAgB,WAAW;YAAM,QAAQ;YAA0B,YAAY;QAAS;QACvI;YAAE,IAAI;YAAG,MAAM;YAAuB,WAAW;YAAe,WAAW;YAAM,QAAQ;YAA0B,YAAY;QAAS;QACxI;YAAE,IAAI;YAAG,MAAM;YAAuB,WAAW;YAAgB,WAAW;YAAM,QAAQ;YAA0B,YAAY;QAAS;QACzI;YAAE,IAAI;YAAG,MAAM;YAAiB,WAAW;YAAsB,WAAW;YAAO,QAAQ;YAA0B,YAAY;QAAS;QAC1I;YAAE,IAAI;YAAG,MAAM;YAAoB,WAAW;YAAiB,WAAW;YAAO,QAAQ;YAA0B,YAAY;QAAU;QACzI;YAAE,IAAI;YAAG,MAAM;YAAoB,WAAW;YAAgB,WAAW;YAAO,QAAQ;YAA0B,YAAY;QAAS;QACvI;YAAE,IAAI;YAAG,MAAM;YAAqB,WAAW;YAAmB,WAAW;YAAO,QAAQ;YAA0B,YAAY;QAAS;QAC3I;YAAE,IAAI;YAAG,MAAM;YAAoB,WAAW;YAAmB,WAAW;YAAO,QAAQ;YAA0B,YAAY;QAAS;QAC1I;YAAE,IAAI;YAAG,MAAM;YAAuB,WAAW;YAAsB,WAAW;YAAO,QAAQ;YAA0B,YAAY;QAAS;QAChJ;YAAE,IAAI;YAAI,MAAM;YAAwB,WAAW;YAAkB,WAAW;YAAO,QAAQ;YAA0B,YAAY;QAAU;QAC/I;YAAE,IAAI;YAAI,MAAM;YAAuB,WAAW;YAAiB,WAAW;YAAO,QAAQ;YAA0B,YAAY;QAAS;QAC5I;YAAE,IAAI;YAAI,MAAM;YAAqB,WAAW;YAAc,WAAW;YAAM,QAAQ;YAA0B,YAAY;QAAW;KACzI;IAED,eAAe;IACf,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,yCAAyC;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;WAAI;KAAW;IAEtE,aAAa;IACb,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,CAAC;IAClD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,iBAAiB;IACjB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAEzD,oDAAoD;IACpD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,YAAY,IAAI,OAAO,IAAI;YAC7B,mBAAmB;mBAAI;aAAW;QACpC,OAAO;YACL,MAAM,QAAQ,YAAY,WAAW;YACrC,MAAM,WAAW,WAAW,MAAM,CAChC,CAAA,SACE,OAAO,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC,UACnC,OAAO,SAAS,CAAC,WAAW,GAAG,QAAQ,CAAC;YAE5C,mBAAmB;QACrB;IACF,GAAG;QAAC;QAAa;KAAW;IAE5B,sBAAsB;IACtB,MAAM,qBAAqB,CAAC;QAC1B,eAAe,EAAE,MAAM,CAAC,KAAK;IAC/B;IAEA,sCAAsC;IACtC,MAAM,wBAAwB,CAAC;QAC7B,MAAM,SAAS,WAAW,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;QAEjD,0BAA0B;QAC1B,IAAI,CAAC,gBAAgB,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,WAAW;YACrD,mBAAmB;mBAAI;gBAAiB;aAAO;YAE/C,oEAAoE;YACpE,WAAW;gBACT,cAAc;YAChB,GAAG;QACL;IACF;IAEA,wDAAwD;IACxD,MAAM,gBAAgB,CAAC;QACrB,mCAAmC;QACnC,cAAc,CAAA,cACZ,YAAY,GAAG,CAAC,CAAA,SACd,OAAO,EAAE,KAAK,WAAW;oBAAE,GAAG,MAAM;oBAAE,WAAW;gBAAK,IAAI;QAI9D,+BAA+B;QAC/B,mBAAmB,CAAA,eACjB,aAAa,MAAM,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;QAGxC,wBAAwB;QACxB,gBAAgB,CAAA,YAAa,CAAC;gBAC5B,GAAG,SAAS;gBACZ,CAAC,SAAS,EAAE;oBACV;wBACE,QAAQ;wBACR,MAAM;wBACN,WAAW,IAAI,OAAO,kBAAkB,CAAC,EAAE,EAAE;4BAAE,MAAM;4BAAW,QAAQ;wBAAU;oBACpF;iBACD;YACH,CAAC;IACH;IAEA,0BAA0B;IAC1B,MAAM,WAAW,CAAC;QAChB,cAAc;QAEd,sCAAsC;QACtC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YAC3B,gBAAgB,CAAA,YAAa,CAAC;oBAC5B,GAAG,SAAS;oBACZ,CAAC,SAAS,EAAE;wBACV;4BACE,QAAQ;4BACR,MAAM;4BACN,WAAW,IAAI,OAAO,kBAAkB,CAAC,EAAE,EAAE;gCAAE,MAAM;gCAAW,QAAQ;4BAAU;wBACpF;qBACD;gBACH,CAAC;QACH;IACF;IAEA,oBAAoB;IACpB,MAAM,YAAY;QAChB,cAAc;IAChB;IAEA,uBAAuB;IACvB,MAAM,cAAc;QAClB,IAAI,WAAW,IAAI,OAAO,MAAM,CAAC,YAAY;QAE7C,sBAAsB;QACtB,gBAAgB,CAAA,YAAa,CAAC;gBAC5B,GAAG,SAAS;gBACZ,CAAC,WAAW,EAAE;uBACR,SAAS,CAAC,WAAW,IAAI,EAAE;oBAC/B;wBACE,QAAQ;wBACR,MAAM;wBACN,WAAW,IAAI,OAAO,kBAAkB,CAAC,EAAE,EAAE;4BAAE,MAAM;4BAAW,QAAQ;wBAAU;oBACpF;iBACD;YACH,CAAC;QAED,cAAc;QAEd,4CAA4C;QAC5C,WAAW;YACT,MAAM,SAAS,WAAW,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;YACjD,MAAM,YAAY;gBAChB;gBACA,CAAC,QAAQ,EAAE,OAAO,SAAS,CAAC,mCAAmC,CAAC;gBAChE;gBACA;gBACA;gBACA;aACD;YAED,MAAM,iBAAiB,SAAS,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,UAAU,MAAM,EAAE;YAE9E,gBAAgB,CAAA,YAAa,CAAC;oBAC5B,GAAG,SAAS;oBACZ,CAAC,WAAW,EAAE;2BACR,SAAS,CAAC,WAAW,IAAI,EAAE;wBAC/B;4BACE,QAAQ;4BACR,MAAM;4BACN,WAAW,IAAI,OAAO,kBAAkB,CAAC,EAAE,EAAE;gCAAE,MAAM;gCAAW,QAAQ;4BAAU;wBACpF;qBACD;gBACH,CAAC;QACH,GAAG;IACL;IAEA,sCAAsC;IACtC,MAAM,mBAAmB,gBAAgB,MAAM,CAAC,CAAA,SAAU,OAAO,SAAS;IAC1E,MAAM,mBAAmB,gBAAgB,MAAM,CAAC,CAAA,SAAU,CAAC,OAAO,SAAS;IAE3E,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,qIAAA,CAAA,UAAc;;;;;;;;;;0BAIjB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAO,WAAU;;8CAChB,8OAAC;oCAAG,WAAU;8CAA+C;;;;;;8CAC7D,8OAAC;oCAAE,WAAU;8CAAqB;;;;;;;;;;;;sCAIpC,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;8DACb,cAAA,8OAAC,sMAAA,CAAA,SAAM;wDAAC,MAAM;wDAAI,WAAU;;;;;;;;;;;8DAE9B,8OAAC;oDACC,MAAK;oDACL,aAAY;oDACZ,OAAO;oDACP,UAAU;oDACV,WAAU;;;;;;;;;;;;wCAIb,gBAAgB,MAAM,GAAG,mBACxB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAK,WAAU;8DAAoB,gBAAgB,MAAM;;;;;;8DAC1D,8OAAC;;wDAAK;wDAAmB,gBAAgB,MAAM,GAAG,IAAI,MAAM;;;;;;;;;;;;;;;;;;;gCAMjE,gBAAgB,MAAM,GAAG,mBACxB,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAA2C;;;;;;sDACzD,8OAAC;4CAAI,WAAU;sDACZ,gBAAgB,GAAG,CAAC,CAAA,uBACnB,8OAAC;oDAAiC,WAAU;;sEAC1C,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,KAAK,OAAO,MAAM;oEAAE,KAAK,OAAO,IAAI;oEAAE,WAAU;;;;;;8EACrD,8OAAC;;sFACC,8OAAC;4EAAG,WAAU;sFAAe,OAAO,IAAI;;;;;;sFACxC,8OAAC;4EAAE,WAAU;sFAAyB,OAAO,SAAS;;;;;;;;;;;;;;;;;;sEAG1D,8OAAC;4DAAK,WAAU;sEAA+D;;;;;;;mDARvE,CAAC,QAAQ,EAAE,OAAO,EAAE,EAAE;;;;;;;;;;;;;;;;;;;;;;sCAgB1C,8OAAC;4BAAI,WAAU;;8CAEb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;;8DACZ,8OAAC,oMAAA,CAAA,QAAK;oDAAC,MAAM;oDAAI,WAAU;;;;;;gDAAwB;;;;;;;wCAIpD,iBAAiB,MAAM,KAAK,kBAC3B,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDAAE,WAAU;0DAAgB;;;;;;;;;;iEAG/B,8OAAC;4CAAI,WAAU;sDACZ,iBAAiB,GAAG,CAAC,CAAA,uBACpB,8OAAC;oDAAoB,WAAU;;sEAC7B,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,KAAK,OAAO,MAAM;oEAAE,KAAK,OAAO,IAAI;oEAAE,WAAU;;;;;;8EACrD,8OAAC;;sFACC,8OAAC;4EAAG,WAAU;sFAA6B,OAAO,IAAI;;;;;;sFACtD,8OAAC;4EAAE,WAAU;sFAAyB,OAAO,SAAS;;;;;;sFACtD,8OAAC;4EAAE,WAAU;;gFAAwB;gFAAc,OAAO,UAAU;;;;;;;;;;;;;;;;;;;sEAGxE,8OAAC;4DACC,SAAS,IAAM,SAAS,OAAO,EAAE;4DACjC,WAAU;;8EAEV,8OAAC,wNAAA,CAAA,gBAAa;oEAAC,MAAM;oEAAI,WAAU;;;;;;gEAAS;;;;;;;;mDAbtC,OAAO,EAAE;;;;;;;;;;;;;;;;8CAuB3B,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAG,WAAU;sDAAuC;;;;;;wCAIpD,iBAAiB,MAAM,KAAK,kBAC3B,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDAAE,WAAU;0DAAgB;;;;;;;;;;iEAG/B,8OAAC;4CAAI,WAAU;sDACZ,iBAAiB,GAAG,CAAC,CAAA,uBACpB,8OAAC;oDAAoB,WAAU;;sEAC7B,8OAAC;4DAAI,WAAU;;8EACb,8OAAC;oEAAI,KAAK,OAAO,MAAM;oEAAE,KAAK,OAAO,IAAI;oEAAE,WAAU;;;;;;8EACrD,8OAAC;;sFACC,8OAAC;4EAAG,WAAU;sFAAe,OAAO,IAAI;;;;;;sFACxC,8OAAC;4EAAE,WAAU;sFAAyB,OAAO,SAAS;;;;;;sFACtD,8OAAC;4EAAE,WAAU;;gFAAwB;gFAAc,OAAO,UAAU;;;;;;;;;;;;;;;;;;;sEAGxE,8OAAC;4DACC,SAAS,IAAM,sBAAsB,OAAO,EAAE;4DAC9C,WAAW,CAAC,iGAAiG,EAC3G,gBAAgB,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,OAAO,EAAE,IAAI,kCAAkC,IACtF;4DACF,UAAU,gBAAgB,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,OAAO,EAAE;;8EAE1D,8OAAC,8MAAA,CAAA,WAAQ;oEAAC,MAAM;oEAAI,WAAU;;;;;;gEAC7B,gBAAgB,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK,OAAO,EAAE,IAAI,cAAc;;;;;;;;mDAjB7D,OAAO,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YA6BhC,4BACC,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAO,SAAS;4CAAW,WAAU;sDACpC,cAAA,8OAAC,gNAAA,CAAA,YAAS;gDAAC,MAAM;;;;;;;;;;;sDAEnB,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDACC,KAAK,WAAW,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,aAAa;oDAChD,KAAI;oDACJ,WAAU;;;;;;8DAEZ,8OAAC;;sEACC,8OAAC;4DAAG,WAAU;sEAAe,WAAW,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,aAAa;;;;;;sEACxE,8OAAC;4DAAE,WAAU;sEAAyB,WAAW,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,aAAa;;;;;;;;;;;;;;;;;;;;;;;;8CAIvF,8OAAC;oCAAK,WAAU;8CAA8C;;;;;;;;;;;;sCAIhE,8OAAC;4BAAI,WAAU;sCACZ,YAAY,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,sBACvC,8OAAC;oCAEC,WAAW,CAAC,KAAK,EAAE,QAAQ,MAAM,KAAK,YAAY,gBAAgB,iBAAiB;8CAEnF,cAAA,8OAAC;wCACC,WAAW,CAAC,iCAAiC,EAC3C,QAAQ,MAAM,KAAK,YACf,2CACA,mDACJ;;0DAEF,8OAAC;0DAAG,QAAQ,IAAI;;;;;;0DAChB,8OAAC;gDAAE,WAAW,CAAC,aAAa,EAAE,QAAQ,MAAM,KAAK,YAAY,kBAAkB,iBAAiB;0DAC7F,QAAQ,SAAS;;;;;;;;;;;;mCAZjB;;;;;;;;;;sCAoBX,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCACC,MAAK;wCACL,OAAO;wCACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;wCAC7C,aAAY;wCACZ,WAAU;wCACV,YAAY,CAAC,IAAM,EAAE,GAAG,KAAK,WAAW;;;;;;kDAE1C,8OAAC;wCACC,SAAS;wCACT,WAAU;kDAEV,cAAA,8OAAC,kMAAA,CAAA,OAAI;4CAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAS9B","debugId":null}}]
}